# -*- mode: ruby -*-
# vi: set ft=ruby :

# This script uses the following vagrant plugins:
#   vagrant plugin install vagrant-hostmanager

VAGRANTFILE_API_VERSION = '2'

# List of VMs to create.
NODES = [
  {
    name: 'sip01',
    ip: '192.168.101.101',
    cpus: 1,
    mem: 1024,
    # Expose ports over NAT
    # expose_ports: [
    #   { id: 'mesos', guest: 5050, host: 5050},
    # ]
  },
  { name: 'sip02', ip: '192.168.101.102', cpus: 1, mem: 1024},
  { name: 'sip03', ip: '192.168.101.103', cpus: 1, mem: 1024},
]

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Hostmanager config
  config.vm.provision :hostmanager
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  # Loop over set of defined nodes and set up VMs
  NODES.each do |node|
    config.vm.define node[:name] do |config|

      config.vm.box = "boxcutter/ubuntu1604"
      config.vm.hostname = node[:name].to_s

      # Provision network interface
      config.vm.network :private_network, ip: node[:ip]
      config.ssh.insert_key = false

      # Virtualbox configuration
      config.vm.provider :virtualbox do |vb|
        vb.name = node[:name].to_s
        vb.customize ['modifyvm', :id, '--cpus', node[:cpus]]
        vb.customize ['modifyvm', :id, '--memory', node[:mem]]
        # Needed for mac os?
        vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
      end

      # Port forwards (NAT)
      if not node[:expose_ports].nil?
        if node[:expose_ports]
          node[:expose_ports].each do |ports|
            config.vm.network :forwarded_port, \
              guest: ports[:guest], \
              host: ports[:host], \
              id: ports[:id]
          end
        end
      end

    end
  end

end
