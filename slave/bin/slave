#!/usr/bin/python3

""" Skeleton slave controller for use in a Docker container

All it does is send heartbeat messages to MC.

It also can start a component, currently /home/sdp/components/component.py,
monitor it's hearbeat messages, extract the component's state and write 
into a system log when the state changes.

A handler for SIGTERM is set up that just exits because that is what
'Docker stop' sends.
"""

import os
import signal
import sys

sys.path.append(os.path.join(os.path.dirname(__file__),'..', '..', 'common'))
sys.path.append(os.path.join(os.path.dirname(__file__),'..'))

from sip_slave.main import main

def _sig_handler(signum, frame):
    sys.exit(0)

if __name__ == '__main__':
    name = sys.argv[1]
    heartbeat_port = sys.argv[2]
    server_port = int(sys.argv[3])

    # Install handler to respond to SIGTERM
    signal.signal(signal.SIGTERM, _sig_handler)

    # Call main program
    main(name, heartbeat_port, server_port)
