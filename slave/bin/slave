#!/usr/bin/python3

import os
import signal
import sys
import argparse

sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..', 'common'))
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))


def _sig_handler(signum, frame):
    sys.exit(0)


def _parse_command_line():
    parser = argparse.ArgumentParser(prog='slave',
                                     description='Slave controller',
                                     epilog='Example: $ slave/bin/slave slave1 '
                                            '2000 2001 127.0.0.1 task_control')
    parser.add_argument('name', help='The name of the slave as known to the '
                                     'master controller. This name is included '
                                     'in heartbeat messages.')
    parser.add_argument('heartbeat_port', type=int,
                        help='The TCP port to send heatbeat messages to.')
    parser.add_argument('server_port', type=int,
                        help='The TCP port of the command server to bind to.')
    parser.add_argument('logging_address', help='??')
    parser.add_argument('task_control_module',
                        help='The name of the module (in sip_slave) to load '
                             'the task load and unload functions from.')
    return parser.parse_args()


def main():
    # Parse command line arguments
    args = _parse_command_line()
    name = args.name
    heartbeat_port = args.heartbeat_port
    server_port = args.server_port
    logging_address = args.logging_address
    task_control_module = args.task_control_module

    # Install handler to respond to SIGTERM
    signal.signal(signal.SIGTERM, _sig_handler)

    # Define SIP_HOSTNAME
    os.environ['SIP_HOSTNAME'] = logging_address

    # Call main program
    from sip_slave.main import main
    main(name, heartbeat_port, server_port, task_control_module)


if __name__ == '__main__':
    main()
