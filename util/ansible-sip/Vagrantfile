# -*- mode: ruby -*-
# vi: set ft=ruby ts=2 sw=2 tw=0 et:

require './vagrant_utils.rb'

# Specify Vagrant version and Vagrant API version
Vagrant.require_version ">= 1.9.0"
VAGRANTFILE_API_VERSION = "2"
VAGRANT_COMMAND = ARGV[0]

# Settings
# =============================================================================
cpus = 2       # Number of CPUs allocated to each VM
memory = 1024  # Memory in MiB allocated to each VM
# A host can be in the following groups:
#     swarm_leader, swarm_manager, or swarm_worker
# One swarm_leader host (box) has to be defined.
boxes = [
    {
        :name => 'sip-01',
        :groups => :swarm_leader,
        :ip => '192.168.120.101',
        :cpus => cpus,
        :memory => memory,
    },
    {
        :name => 'ska1',
        :groups => :swarm_worker,
        :ip => '192.168.120.102',
        :cpus => cpus,
        :memory => memory,
    },
    {
        :name => 'ska2',
        :groups => :swarm_worker,
        :ip => '192.168.120.103',
        :cpus => cpus,
        :memory => memory,
    },
]
box_name = "ubuntu/xenial64"  # Vagrant box file
box_user = "ubuntu"  # User name of the vagrant box being used.
key_name = "sip_key"  # Name of an ssh key pair to create to insert into the
                      # VMs.
ansible_inventory_file = "hosts"  # Name of the ansible inventory file to
                                  # generate
# =============================================================================

# Create Ansible host file based on boxes.
write_hosts_file(boxes, box_user, ansible_inventory_file, "keys/#{key_name}")

# Create an insecure SSH key pair (if it does not already exist).
Dir.mkdir("keys") unless Dir.exist?("keys")
cmd = "echo -e \"n\" | ssh-keygen -t rsa -b 2048 -f keys/#{key_name} -q -N "\
      "\"\" 1>/dev/null"
system(cmd)

Vagrant.configure(VAGRANTFILE_API_VERSION) do |c|

    boxes.each do |box|
        # Configure VM options
        c.vm.define "#{box[:name]}" do |config|

            # Remove existing IP from known_hosts
            system("ssh-keygen -f ~/.ssh/known_hosts -R #{box[:ip]} -q "\
                   "2>/dev/null")

            if VAGRANT_COMMAND == "up"
                puts "VM #{box[:name]} : ip=#{box[:ip]}"
            end

            config.vm.hostname = box[:name]
            config.vm.box = box_name
            config.vm.network :private_network, ip: box[:ip]

            # Configure Virtual machine setup
            config.vm.provider :virtualbox do |vb|
                vb.name = config.vm.hostname
                vb.customize ['modifyvm', :id, '--cpus', box[:cpus]]
                vb.customize ['modifyvm', :id, '--memory', box[:memory]]
                vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            end

            # SSH set up (copies generated key into the VM's authorized_keys).
            config.vm.provision :shell do |shell|
                pub_key = File.readlines("keys/#{key_name}.pub").first.strip
                shell.inline = <<-SHELL
                    echo #{pub_key} >> /home/#{box_user}/.ssh/authorized_keys
                SHELL
            end

            # Copy generated key to the VM for passwordless ssh into localhost
            config.vm.provision :file, source: "keys/#{key_name}.pub",
                destination: "~/.ssh/id_rsa.pub"
            config.vm.provision :file, source: "keys/#{key_name}",
                destination: "~/.ssh/id_rsa"
            config.vm.provision :shell, :inline =>
                "chmod 600 /home/#{box_user}/.ssh/id_rsa"
        end
    end
end
